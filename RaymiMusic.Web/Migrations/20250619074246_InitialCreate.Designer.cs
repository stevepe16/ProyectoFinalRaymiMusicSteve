// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RaymiMusic.Api.Data;

#nullable disable

namespace RaymiMusic.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250619074246_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RaymiMusic.Modelos.Album", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArtistaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("FechaLanzamiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArtistaId");

                    b.ToTable("Albumes");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Artista", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Biografia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreArtistico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlFotoPerfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlFotoPortada")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Artistas");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Cancion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AlbumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArtistaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("Duracion")
                        .HasColumnType("time");

                    b.Property<Guid>("GeneroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RutaArchivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("ArtistaId");

                    b.HasIndex("GeneroId");

                    b.ToTable("Canciones");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.CancionLista", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CancionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ListaPublicaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ListaReproduccionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CancionId");

                    b.HasIndex("ListaPublicaId");

                    b.HasIndex("ListaReproduccionId");

                    b.ToTable("CancionesEnListas");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Genero", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.ListaPublica", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreadaPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ListasPublicas");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.ListaReproduccion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EsPublica")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ListasReproduccion");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Perfil", b =>
                {
                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreCompleto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlFoto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Perfiles");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.PlanSuscripcion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DescargasMaximas")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id");

                    b.ToTable("Planes");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HashContrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PlanSuscripcionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlanSuscripcionId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Album", b =>
                {
                    b.HasOne("RaymiMusic.Modelos.Artista", "Artista")
                        .WithMany("Albumes")
                        .HasForeignKey("ArtistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artista");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Cancion", b =>
                {
                    b.HasOne("RaymiMusic.Modelos.Album", "Album")
                        .WithMany("Canciones")
                        .HasForeignKey("AlbumId");

                    b.HasOne("RaymiMusic.Modelos.Artista", "Artista")
                        .WithMany("Canciones")
                        .HasForeignKey("ArtistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RaymiMusic.Modelos.Genero", "Genero")
                        .WithMany("Canciones")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Artista");

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.CancionLista", b =>
                {
                    b.HasOne("RaymiMusic.Modelos.Cancion", "Cancion")
                        .WithMany("CancionesEnListas")
                        .HasForeignKey("CancionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RaymiMusic.Modelos.ListaPublica", null)
                        .WithMany("CancionesEnListas")
                        .HasForeignKey("ListaPublicaId");

                    b.HasOne("RaymiMusic.Modelos.ListaReproduccion", "ListaReproduccion")
                        .WithMany("CancionesEnListas")
                        .HasForeignKey("ListaReproduccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cancion");

                    b.Navigation("ListaReproduccion");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.ListaReproduccion", b =>
                {
                    b.HasOne("RaymiMusic.Modelos.Usuario", "Usuario")
                        .WithMany("ListasReproduccion")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Perfil", b =>
                {
                    b.HasOne("RaymiMusic.Modelos.Usuario", "Usuario")
                        .WithOne("Perfil")
                        .HasForeignKey("RaymiMusic.Modelos.Perfil", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Usuario", b =>
                {
                    b.HasOne("RaymiMusic.Modelos.PlanSuscripcion", "PlanSuscripcion")
                        .WithMany("Usuarios")
                        .HasForeignKey("PlanSuscripcionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanSuscripcion");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Album", b =>
                {
                    b.Navigation("Canciones");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Artista", b =>
                {
                    b.Navigation("Albumes");

                    b.Navigation("Canciones");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Cancion", b =>
                {
                    b.Navigation("CancionesEnListas");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Genero", b =>
                {
                    b.Navigation("Canciones");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.ListaPublica", b =>
                {
                    b.Navigation("CancionesEnListas");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.ListaReproduccion", b =>
                {
                    b.Navigation("CancionesEnListas");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.PlanSuscripcion", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Usuario", b =>
                {
                    b.Navigation("ListasReproduccion");

                    b.Navigation("Perfil");
                });
#pragma warning restore 612, 618
        }
    }
}
